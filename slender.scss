/**
 * slender.css
 * MIT License
 * Copyright 2019 urin
 */

$colors-light:
  white,
  light;
$colors-dark:
  gray-lighter,
  gray-light,
  gray,
  gray-dark,
  dark,
  black,
  primary,
  secondary,
  success,
  info,
  warning,
  danger,
  blue,
  indigo,
  purple,
  pink,
  red,
  orange,
  yellow,
  green,
  teal,
  cyan;
$colors: join($colors-light, $colors-dark);

:root {
  --h: 211;
  --s: .8;
  --l: .95;
  --bg-h: 211;
  --bg-s: .30;
  --bg-l: .14;
  --radius: max(2px, calc(1em / 5));
  --duration: .25s;
  --disabled-opacity: .4;

  --bg-l-invert: calc(1 - var(--bg-l));
  --bg: hsl(var(--bg-h), calc(var(--bg-s) * 100%), calc(var(--bg-l) * 100%));
  // Step function y = max(x, 0) / x
  --fg: hsl(var(--h), 10%, calc(30% + 50% * (1 - max(var(--bg-l) - 0.7, 0) / (var(--bg-l) - 0.7))));

  --white:        #fff;
  --light:        hsl(var(--h), calc(var(--s) *  10%), 97%);
  --gray-lighter: hsl(var(--h), calc(var(--s) *  10%), 80%);
  --gray-light:   hsl(var(--h), calc(var(--s) *  10%), 65%);
  --gray:         hsl(var(--h), calc(var(--s) *  10%), 45%);
  --gray-dark:    hsl(var(--h), calc(var(--s) *  10%), 23%);
  --dark:         hsl(var(--h), calc(var(--s) *  10%), 13%);
  --black:        hsl(var(--h), calc(var(--s) *  10%),  7%);

  --primary:    hsl(var(--h), calc(var(--s) * 100%), calc(var(--l) * 50%));
  --secondary:  hsl(var(--h), calc(var(--s) *  10%), calc(var(--l) * 46%));
  --success:    hsl(134, calc(var(--s) *  61%), calc(var(--l) * 41%));
  --info:       hsl(188, calc(var(--s) *  78%), calc(var(--l) * 41%));
  --warning:    hsl( 45, calc(var(--s) * 100%), calc(var(--l) * 41%));
  --danger:     hsl(354, calc(var(--s) *  70%), calc(var(--l) * 54%));

  --blue:       hsl(211, calc(var(--s) * 100%), calc(var(--l) * 50%));
  --indigo:     hsl(263, calc(var(--s) *  90%), calc(var(--l) * 50%));
  --purple:     hsl(261, calc(var(--s) *  50%), calc(var(--l) * 50%));
  --pink:       hsl(332, calc(var(--s) *  80%), calc(var(--l) * 60%));
  --red:        hsl(354, calc(var(--s) *  70%), calc(var(--l) * 55%));
  --orange:     hsl( 27, calc(var(--s) * 100%), calc(var(--l) * 55%));
  --yellow:     hsl( 45, calc(var(--s) * 100%), calc(var(--l) * 50%));
  --green:      hsl(134, calc(var(--s) *  60%), calc(var(--l) * 40%));
  --teal:       hsl(162, calc(var(--s) *  70%), calc(var(--l) * 45%));
  --cyan:       hsl(188, calc(var(--s) *  80%), calc(var(--l) * 40%));
}

html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
  outline: none;
}

body {
  font-size: 16px;
  line-height: 1;
  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Segoe UI", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select,
textarea {
  margin: 0;
  font: inherit;
}

a {
  color: var(--fg);
  text-decoration: none;
}

pre {
  white-space: pre-line;
}

code, kbd, pre, samp {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

hr {
  box-sizing: content-box;
  height: 0;
  border: none;
  border-bottom: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 40%));
}

img,
embed,
iframe,
object,
audio,
video {
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
  text-align: left;
  vertical-align: top;
}

fieldset {
  min-width: 0;
  border: none;
}

::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background-color: var(--gray-lighter);
  box-shadow: 0 0 1px var(--light);
}

::-webkit-scrollbar-thumb {
  border-radius: 100vmax;
  background-color: var(--gray-light);
  box-shadow: 0 0 1px var(--gray) inset;
}

/**
 * common
 */
@keyframes ripple {
  from {
    background-size: 0%;
  }
  to {
    background-size: 400%;
  }
}

.button,
.toggle-button,
.file-select,
.box,
.tag,
.table,
.input,
.dialog,
.icon,
.notification,
.progress {
  transition-duration: var(--duration);
  transition-timing-function: ease-in-out;
}

/**
 * document
 */
.document {
  padding: 2em;
  line-height: 1.5;
}

.document a:not(.button):not(.tag) {
  color: var(--info);
}

.document :is(
  p, dl, ol, ul, li, blockquote, pre, table
) {
  margin-bottom: .5em;
}

.document :is(h1, h2, h3, h4, h5, h6) {
  font-weight: 600;
  line-height: 1.125;
  margin-bottom: .4em;
}

.document h1 {
  font-size: 2em;
}

.document h2 {
  font-size: 1.75em;
}

.document h3 {
  font-size: 1.5em;
}

.document h4 {
  font-size: 1.25em;
}

.document h5 {
  font-size: 1.125em;
}

.document h6 {
  font-size: 1em;
}

.document blockquote {
  padding: 1.25em 1.5em;
}

.document ol {
  list-style-position: outside;
  margin-left: 2em;
  margin-top: 1em;
}

.document ol:not([type]) {
  list-style-type: decimal;
}

.document ul {
  list-style: disc outside;
  margin-left: 2em;
  margin-bottom: 1em;
}

.document ul ul {
  list-style-type: circle;
  margin-bottom: .5em;
}

.document ul ul ul {
  list-style-type: square;
}

.document dd {
  margin-left: 2em;
}

.document figure {
  margin-left: 2em;
  margin-right: 2em;
  text-align: center;
}

.document figure:not(:first-child) {
  margin-top: 2em;
}

.document figure:not(:last-child) {
  margin-bottom: 2em;
}

.document figure img {
  display: inline-block;
}

.document figure figcaption {
  font-style: italic;
}

.document pre {
  -webkit-overflow-scrolling: touch;
  padding: 1.25em 1.5em;
  overflow-wrap: normal;
}

.document sup,
.document sub {
  font-size: 75%;
}

.document hr {
  margin: 1rem 0;
}

.document :not(pre) > code {
  padding: .2em .4em;
  border-radius: var(--radius);
  white-space: nowrap;
  background-color: hsla(0, 0%, calc(var(--bg-l-invert) * 100%), .08);
  color: var(--warning);
}

/**
 * box
 */
.box {
  display: inline-flex;
  padding: 1em;
  border-radius: calc(1.5 * var(--radius));
  background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .08);
}

/**
 * button
 */
.button,
.toggle-button > input + *,
.file-select > [type=file] + * {
  display: inline-flex;
  line-height: 2;
  padding: 0 .8em;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  vertical-align: baseline;
  text-align: center;
  align-items: center;
  align-content: center;
  justify-content: center;
  border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
  border-radius: var(--radius);
  cursor: pointer;
  transition-property: box-shadow, background-color;
  color: var(--fg);
  background-color: var(--bg);
  background-image: radial-gradient(circle, hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .1) 50%, transparent 51%);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 0%;
}

.toggle-button,
.file-select {
  display: inline-flex;
  position: relative;
}

.toggle-button > input {
  position: absolute;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.button:focus,
.toggle-button > input:focus + *,
.file-select > [type=file]:focus + * {
  animation: var(--duration) linear ripple;
}

.button:hover,
.button:focus,
.toggle-button:hover > input + *,
.toggle-button > input:focus + *,
.file-select:hover > [type=file] + *,
.file-select > [type=file]:focus + * {
  box-shadow: inset 100vw 100vh hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .2);
}

a.button:not([href]):hover,
.button[disabled]:hover,
.toggle-button:hover > input[disabled] + *,
.file-select:hover > [type=file][disabled] + *,
fieldset[disabled] :is(
  .button:hover,
  .toggle-button:hover > input + *,
  .file-select:hover > [type=file] + *
) {
  box-shadow: none;
}

.toggle-button > :checked + * {
  background-color: var(--primary) !important;
  color: var(--light);
}

a.button:not([href]),
.button[disabled],
.toggle-button > input[disabled] + *,
.file-select > [type=file][disabled] + *,
fieldset[disabled] :is(
  .button,
  .toggle-button > input + *,
  .file-select > [type=file] + *
) {
  opacity: var(--disabled-opacity);
  cursor: not-allowed;
}

.button.rounded,
:is(.toggle-button, .file-select).rounded > input + * {
  border-radius: 100vmax;
}

.grouped:not(.vertical) > :is(
  .toggle-button, .file-select
):not(:first-child) > input + * {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.grouped:not(.vertical) > :is(
  .toggle-button, .file-select
):not(:last-child) > input + *,
.grouped:not(.vertical) > .file-select:not(:last-child) > input + * {
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.grouped.vertical > :is(
  .toggle-button, .file-select
):not(:first-child) > input + * {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.grouped.vertical > :is(
  .toggle-button, .file-select
):not(:last-child) > input + * {
  border-bottom-width: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

@each $color in $colors-light {
  .button.is-#{$color},
  :is(.toggle-button, .file-select).is-#{$color} > input + * {
    background-color: var(--#{$color});
  }
}

@each $color in $colors-dark {
  .button.is-#{$color},
  :is(.toggle-button, .file-select).is-#{$color} > input + * {
    background-color: var(--#{$color});
    color: var(--light);
  }
}

@each $color in $colors {
  .button.outlined.is-#{$color},
  :is(.toggle-button, .file-select).outlined.is-#{$color} > input + * {
    background-color: transparent;
    color: var(--#{$color});
    border-color: var(--#{$color});
  }
}

/**
 * tag
 */
.tag {
  display: inline-flex;
  font-size: .6rem;
  padding: .4em .7em;
  line-height: 1;
  border-radius: var(--radius);
  vertical-align: baseline;
  text-align: center;
  align-items: center;
  align-content: center;
  justify-content: center;
  color: var(--fg);
  background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .08);
}

.tag.rounded {
  border-radius: 100vw;
}

.tag.size-xs,
.grouped.size-xs > .tag {
  font-size: .4rem;
}
.tag.size-s,
.grouped.size-s > .tag {
  font-size: .5rem;
}
.tag.size-m,
.grouped.size-m > .tag {
  font-size: .6rem;
}
.tag.size-l,
.grouped.size-l > .tag {
  font-size: 1rem;
}
.tag.size-xl,
.grouped.size-xl > .tag {
  font-size: 1.2rem;
}

.grouped > .tag {
  border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
}

.grouped:not(.vertical) > .tag:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.grouped:not(.vertical) > .tag:not(:last-child) {
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.grouped.vertical > .tag:not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.grouped.vertical > .tag:not(:last-child) {
  border-bottom-width: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

@each $color in $colors-light {
  .tag.is-#{$color} {
    background-color: var(--#{$color});
  }
}

@each $color in $colors-dark {
  .tag.is-#{$color} {
    background-color: var(--#{$color});
    color: var(--light);
  }
}

@each $color in $colors {
  .tag.outlined.is-#{$color} {
    background-color: transparent;
    color: var(--#{$color});
    border: 1px solid var(--#{$color});
  }
}

/**
 * input
 */
.label {
  line-height: 2;
  cursor: pointer;
}

.label.grouped > :first-child {
  margin-left: .3em;
}

:is(.input, .textarea)::placeholder {
  color: var(--gray-lighter);
}

:is(.input, .textarea):invalid::placeholder {
  color: var(--gray);
}

.input:is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
.select,
.textarea {
  display: inline-flex;
  appearance: none;
  -webkit-appearance: none;
  vertical-align: baseline;
  line-height: 2;
  padding: 0 .6em;
  color: var(--dark);
  background-color: var(--light);
  border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
  border-radius: calc(var(--radius) / 1.5);
  transition-property: border-color, box-shadow;
}

.textarea {
  padding-top: .25em;
  padding-bottom: .25em;
  line-height: 1.5;
}

.select {
  font-family: inherit;
  font-size: inherit;
  cursor: pointer;
  outline: none;
}

.select:not([multiple]),
.grouped > .select:not([multiple]) {
  padding-right: 2em;
}

.select:not([multiple]) {
  background-repeat: no-repeat;
  background-size: 1em 1em;
  background-position: calc(100% - .5em) .5em;
  background-image:
    url('data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2250%22%20height%3D%2250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cg%3E%20%3Crect%20width%3D%2250%22%20height%3D%2250%22%20fill%3D%22none%22%2F%3E%20%3Cpolygon%20fill%3D%22%23b2b2b2%22%20points%3D%2247.25%2C15%2045.164%2C12.914%2025%2C33.078%204.836%2C12.914%202.75%2C15%2025%2C37.25%20%22%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E');
}

.select > option {
  padding: 0 1em;
}

.select[multiple] {
  padding: 0;
  height: auto;
}

.select[multiple] > option {
  padding: .5em .6em;
}

.file-select > [type=file] {
  position: absolute;
  opacity: 0 !important;
  width: 100%;
  height: 100%;
}

.radio,
.checkbox {
  cursor: pointer;
}

.input[readonly]:is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
[readonly]:is(.select, .textarea) {
  color: var(--gray);
}

.input[disabled]:is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
fieldset[disabled] :is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
[disabled]:is(.select, .textarea),
fieldset[disabled] :is(.select, .textarea) {
  opacity: var(--disabled-opacity);
  background-color: var(--light);
  color: var(--gray);
  cursor: not-allowed;
}

.input:focus:is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
:focus:is(.select, .textarea) {
  box-shadow: 0 0 2px 1px var(--primary) inset;
}

.input:invalid:is(
  [type=text],
  [type=date],
  [type=datetime-local],
  [type=email],
  [type=file],
  [type=month],
  [type=number],
  [type=password],
  [type=search],
  [type=tel],
  [type=time],
  [type=url],
  [type=week]
),
:invalid:is(.select, .textarea) {
  background-color: hsl(354, calc(var(--s) * 100%), calc(90% + 7% * var(--bg-l)));
  border-color: var(--danger);
}

// Firefox only
@-moz-document url-prefix() {
  .range {
    appearance: none;
    width: fit-content;
    height: 8px;
    border-radius: 100vmax;
    background-color: var(--blue);
  }

  .range::-moz-range-thumb {
    appearance: none;
    width: 1rem;
    height: 1rem;
    border: none;
    border-radius: 100vmax;
    box-shadow: 0 0 0 1rem var(--blue) inset;
  }
}

/**
 * modifiers
 */
.fullwidth {
  width: 100%;
}

.fullwidth:not(.table) {
  display: flex;
}

.fullwidth:not(.table):not([multiple]) > * {
  width: 100%;
}

:not(.vertical) .fullwidth:not(
  :is(.table, [multiple], .vertical)
) > :not(.vertical) {
  margin-left: .5em;
}

.size-xs {
  font-size: .7rem;
}

.size-s {
  font-size: .9rem;
}

.size-m {
  font-size: 1rem;
}

.size-l {
  font-size: 1.3rem;
}

.size-xl {
  font-size: 1.5rem;
}

.grouped:not(.vertical) > :not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.grouped:not(.vertical) > :not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.grouped.vertical > :not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.grouped.vertical > :not(:last-child) {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

/**
 * table
 */
.table :is(thead, tfoot) {
  background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .08);
}

.table :is(td, th) {
  border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
  border-width: 0 0 1px;
  padding: .25em .75em;
}

.table thead :is(td, th) {
  border-width: 0 0 2px;
}

.table tfoot :is(td, th) {
  border-width: 2px 0 0;
}

.table tbody tr:last-child :is(td, th) {
  border-bottom-width: 0;
}

.table.bordered :is(td, th) {
  border-width: 1px;
}

.table.bordered tr:last-child :is(td, th) {
  border-bottom-width: 1px;
}

.table.hoverable tbody tr:hover {
  background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), .08);
}

/**
 * dialog
 */
.dialog {
  display: inline-block;
  position: fixed;
  color: var(--fg);
  background-color: var(--bg);
  font-size: 1rem;
  padding: 1em;;
  border: none;
  border-radius: var(--radius);
  box-shadow: 0 0 1px var(--gray) inset;
  opacity: 0;
  transition: opacity var(--duration);
}

.dialog[open] {
  opacity: 1;
}

.dialog::backdrop {
  background-color: rgba(0, 0, 0, .55);
  backdrop-filter: blur(1px);
}

.close {
  display: inline-flex;
  position: relative;
  line-height: 0;
  font-size: 0;
  width:  1.25rem;
  height: 1.25rem;
  padding: 0;
  flex-grow: 0;
  flex-shrink: 0;
  align-items: center;
  align-content: center;
  justify-content: center;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  border: none;
  border-radius: 100vmax;
  cursor: pointer;
  background-color: rgba(128, 128, 128, .5);
  transform: rotate(45deg);
  transform-origin: center center;
}

.close::before {
  display: block;
  content: "";
  position: absolute;
  width: 2px;
  height: .75rem;
  background-color: var(--gray);
}

.close::after {
  display: block;
  content: "";
  position: absolute;
  width: .75rem;
  height: 2px;
  background-color: var(--gray);
}

.dialog > .close {
  position: absolute;
  top: .5rem;
  right: .5rem;
}

.dialog > .close + * {
  margin-top: .75rem;
}

/**
 * helpers
 */
@each $color in $colors {
  .bg-#{$color} {
    background-color: var(--#{$color}) !important;
  }
  .fg-#{$color} {
    color: var(--#{$color}) !important;
  }
}

.middles,
.middles * {
  vertical-align: middle;
}

/**
 * grouped
 */
.grouped {
  display: inline-flex;
  align-items: baseline;
}

.grouped.vertical {
  flex-direction: column;
  align-items: stretch;
}

.grouped > *,
.file-select > * {
  border-radius: var(--radius);
}

.grouped:not(.vertical) > :not(:first-child),
.file-select > :not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.file-select > [type=file] + :nth-child(2) {
  border-top-left-radius: var(--radius);
  border-bottom-left-radius: var(--radius);
}

.grouped:not(.vertical) > :not(:last-child),
.file-select > :not(:last-child) {
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.grouped.vertical > :not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.grouped.vertical > :not(:last-child) {
  border-bottom-width: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

