/**
 * slender.css
 * MIT License
 * Copyright 2019 urin
 */
@layer slender {
  @layer reset, configuration, common, component, modifier;
  @layer reset {
    *:not(iframe,
canvas,
img,
svg,
video,
[multiple],
svg *,
symbol *) {
      all: unset;
      display: revert;
    }

    [multiple] {
      display: revert;
    }

    img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
      display: block;
    }

    *,
*::before,
*::after {
      box-sizing: border-box;
      outline: none;
      border-width: 0;
      border-style: solid;
    }

    a,
button {
      cursor: revert;
    }

    ol, ul, menu {
      list-style: none;
    }

    h1, h2, h3, h4, h5, h6 {
      font-size: 100%;
      font-weight: normal;
    }

    button, input, select, textarea {
      font: inherit;
    }

    textarea {
      overflow-anchor: none;
    }

    a {
      color: inherit;
      text-decoration: none;
    }

    pre {
      white-space: pre-line;
    }

    img, embed, iframe, object, audio, video {
      height: auto;
      max-width: 100%;
    }

    td, th {
      text-align: left;
      vertical-align: top;
    }

    fieldset {
      min-width: 0;
      border: none;
    }

    textarea {
      white-space: revert;
    }

    meter {
      -webkit-appearance: revert;
      appearance: revert;
    }

    ::placeholder {
      color: unset;
    }

    [type=checkbox], [type=radio] {
      appearance: auto;
    }

    [hidden] {
      display: none;
    }

    [contenteditable] {
      -moz-user-modify: read-write;
      -webkit-user-modify: read-write;
      overflow-wrap: break-word;
      line-break: after-white-space;
      -webkit-line-break: after-white-space;
    }

    [draggable=true] {
      -webkit-user-drag: element;
    }
  }
  @layer configuration {
    :root {
      --h: 211;
      --s: .8;
      --l: .95;
      --bg-h: 211;
      --bg-s: .30;
      --bg-l: .14;
      --radius: max(2px, calc(1em / 5));
      --duration: .25s;
      --disabled-opacity: .4;
      --bg-l-invert: calc(1 - var(--bg-l));
      --bg: hsl(var(--bg-h), calc(var(--bg-s) * 100%), calc(var(--bg-l) * 100%));
      --fg: hsl(var(--h), 10%, calc(30% + 50% * (1 - max(var(--bg-l) - 0.7, 0) / (var(--bg-l) - 0.7))));
      --white: #fff;
      --light: hsl(var(--h), calc(var(--s) * 10%), 97%);
      --gray-lighter: hsl(var(--h), calc(var(--s) * 10%), 80%);
      --gray-light: hsl(var(--h), calc(var(--s) * 10%), 65%);
      --gray: hsl(var(--h), calc(var(--s) * 10%), 45%);
      --gray-dark: hsl(var(--h), calc(var(--s) * 10%), 23%);
      --dark: hsl(var(--h), calc(var(--s) * 10%), 13%);
      --black: hsl(var(--h), calc(var(--s) * 10%), 7%);
      --primary: hsl(var(--h), calc(var(--s) * 100%), calc(var(--l) * 50%));
      --secondary: hsl(var(--h), calc(var(--s) * 10%), calc(var(--l) * 46%));
      --success: hsl(134, calc(var(--s) * 61%), calc(var(--l) * 41%));
      --info: hsl(188, calc(var(--s) * 78%), calc(var(--l) * 41%));
      --warning: hsl( 45, calc(var(--s) * 100%), calc(var(--l) * 41%));
      --danger: hsl(354, calc(var(--s) * 70%), calc(var(--l) * 54%));
      --blue: hsl(211, calc(var(--s) * 100%), calc(var(--l) * 50%));
      --indigo: hsl(263, calc(var(--s) * 90%), calc(var(--l) * 50%));
      --purple: hsl(261, calc(var(--s) * 50%), calc(var(--l) * 50%));
      --pink: hsl(332, calc(var(--s) * 80%), calc(var(--l) * 60%));
      --red: hsl(354, calc(var(--s) * 70%), calc(var(--l) * 55%));
      --orange: hsl( 27, calc(var(--s) * 100%), calc(var(--l) * 55%));
      --yellow: hsl( 45, calc(var(--s) * 100%), calc(var(--l) * 50%));
      --green: hsl(134, calc(var(--s) * 60%), calc(var(--l) * 40%));
      --teal: hsl(162, calc(var(--s) * 70%), calc(var(--l) * 45%));
      --cyan: hsl(188, calc(var(--s) * 80%), calc(var(--l) * 40%));
    }
  }
  @layer common {
    *, *::before, *::after {
      border-color: hsl(var(--bg-h), var(--bg-s), var(--bg-l-invert));
      scrollbar-width: thin;
      scrollbar-color: var(--gray-lighter) var(--gray-light);
    }

    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }

    ::-webkit-scrollbar-track {
      background-color: var(--gray-lighter);
      box-shadow: 0 0 1px var(--light);
    }

    ::-webkit-scrollbar-thumb {
      border-radius: 100vmax;
      background-color: var(--gray-light);
      box-shadow: 0 0 1px var(--gray) inset;
    }

    body {
      font-size: 16px;
      line-height: 1;
      background-color: var(--bg);
      color: var(--fg);
      font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Segoe UI", sans-serif;
    }

    code, kbd, pre, samp {
      font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    }

    hr {
      box-sizing: content-box;
      height: 0;
      border: none;
      border-bottom: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 40%));
    }

    @keyframes ripple {
      from {
        background-size: 0%;
      }
      to {
        background-size: 400%;
      }
    }
    table {
      border-collapse: collapse;
    }

    .button,
.toggle-button,
.file-select,
.box,
.tag,
.table,
.input,
.dialog,
.icon,
.notification,
.progress {
      transition-duration: var(--duration);
      transition-timing-function: ease-in-out;
    }

    a[href],
button,
[type=button],
[type=checkbox],
[type=color],
[type=date],
[type=datetime-local],
[type=file],
[type=image],
[type=month],
[type=radio],
[type=range],
[type=reset],
[type=submit],
[type=time],
[type=week] {
      cursor: pointer;
    }
  }
  @layer component {
    /**
    * document
    */
    .document {
      padding: min(2em, 2.5vw);
      line-height: 1.5;
    }
    .document a:not(.button):not(.tag) {
      color: var(--info);
    }
    .document p, .document dl, .document ol, .document ul, .document li, .document blockquote, .document pre, .document table {
      margin-bottom: 0.5em;
    }
    .document h1, .document h2, .document h3, .document h4, .document h5, .document h6 {
      font-weight: 600;
      line-height: 1.125;
      margin-bottom: 0.4em;
    }
    .document h1 {
      font-size: 2em;
    }
    .document h2 {
      font-size: 1.75em;
    }
    .document h3 {
      font-size: 1.5em;
    }
    .document h4 {
      font-size: 1.25em;
    }
    .document h5 {
      font-size: 1.125em;
    }
    .document h6 {
      font-size: 1em;
    }
    .document blockquote {
      padding: 1.25em 1.5em;
    }
    .document ol {
      list-style-position: outside;
      margin-left: 2em;
      margin-top: 1em;
    }
    .document ol:not([type]) {
      list-style-type: decimal;
    }
    .document ul {
      list-style: disc outside;
      margin-left: 2em;
      margin-bottom: 1em;
    }
    .document ul {
      list-style-type: disc;
    }
    .document ul ul {
      list-style-type: circle;
    }
    .document ul ul ul {
      list-style-type: square;
    }
    .document dd {
      margin-left: 2em;
    }
    .document figure {
      margin-left: 2em;
      margin-right: 2em;
      text-align: center;
    }
    .document figure:not(:first-child) {
      margin-top: 2em;
    }
    .document figure:not(:last-child) {
      margin-bottom: 2em;
    }
    .document figure, .document img {
      display: inline-block;
    }
    .document figure figcaption {
      font-style: italic;
    }
    .document pre {
      -webkit-overflow-scrolling: touch;
      padding: 1.25em 1.5em;
      overflow-wrap: normal;
    }
    .document sup, .document sub {
      font-size: 75%;
    }
    .document hr {
      margin: 1rem 0;
    }
    .document :not(pre) > code {
      padding: 0.2em 0.4em;
      border-radius: var(--radius);
      white-space: nowrap;
      background-color: hsla(0, 0%, calc(var(--bg-l-invert) * 100%), 0.08);
      color: var(--warning);
    }

    /**
    * box
    */
    .box {
      display: inline-flex;
      padding: 1em;
      border-radius: calc(1.5 * var(--radius));
      background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.08);
    }

    /**
    * button
    */
    @layer button {
      @layer base {
        .button,
.toggle-button > input + *,
.file-select > [type=file] + * {
          display: inline-flex;
          line-height: 2;
          padding: 0 0.8em;
          appearance: none;
          -moz-appearance: none;
          -webkit-appearance: none;
          vertical-align: baseline;
          text-align: center;
          align-items: center;
          align-content: center;
          justify-content: center;
          border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
          border-radius: var(--radius);
          cursor: pointer;
          transition-property: box-shadow, background-color;
          color: var(--fg);
          background-color: var(--bg);
          background-image: radial-gradient(circle, hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.1) 50%, transparent 51%);
          background-position: center center;
          background-repeat: no-repeat;
          background-size: 0%;
        }

        .toggle-button,
.file-select {
          display: inline-flex;
          position: relative;
        }

        .toggle-button > input {
          position: absolute;
          appearance: none;
          -moz-appearance: none;
          -webkit-appearance: none;
          width: 100%;
          height: 100%;
          cursor: pointer;
        }

        .button.rounded,
:where(.toggle-button, .file-select).rounded > input + * {
          border-radius: 100vmax;
        }

        .grouped:not(.vertical) > :where(.toggle-button, .file-select):not(:first-child) > input + * {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }

        .grouped:not(.vertical) > :where(.toggle-button, .file-select):not(:last-child) > input + *,
.grouped:not(.vertical) > .file-select:not(:last-child) > input + * {
          border-right-width: 0;
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }

        .grouped.vertical > :where(.toggle-button, .file-select):not(:first-child) > input + * {
          border-top-left-radius: 0;
          border-top-right-radius: 0;
        }

        .grouped.vertical > :where(.toggle-button, .file-select):not(:last-child) > input + * {
          border-bottom-width: 0;
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
        }
      }
      @layer state {
        .button:focus,
.toggle-button > input:focus + *,
.file-select > [type=file]:focus + * {
          animation: var(--duration) linear ripple;
        }

        .button:hover,
.button:focus,
.toggle-button:hover > input + *,
.toggle-button > input:focus + *,
.file-select:hover > [type=file] + *,
.file-select > [type=file]:focus + * {
          box-shadow: inset 100vw 100vh hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.2);
        }

        a.button:not([href]):hover,
.button[disabled]:hover,
.toggle-button:hover > input[disabled] + *,
.file-select:hover > [type=file][disabled] + *,
fieldset[disabled] :where(.button:hover,
          .toggle-button:hover > input + *,
          .file-select:hover > [type=file] + *) {
          box-shadow: none;
        }

        .toggle-button > :checked + * {
          background-color: var(--primary) !important;
          color: var(--light);
        }

        a.button:not([href]),
.button[disabled],
.toggle-button > input[disabled] + *,
.file-select > [type=file][disabled] + *,
fieldset[disabled] :where(.button,
          .toggle-button > input + *,
          .file-select > [type=file] + *) {
          opacity: var(--disabled-opacity);
          cursor: not-allowed;
        }
      }
    }
    /**
    * tag
    */
    @layer tag {
      .tag {
        display: inline-flex;
        font-size: 0.6rem;
        padding: 0.4em 0.7em;
        line-height: 1;
        border-radius: var(--radius);
        vertical-align: baseline;
        text-align: center;
        align-items: center;
        align-content: center;
        justify-content: center;
        color: var(--fg);
        background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.08);
      }

      .tag.rounded {
        border-radius: 100vw;
      }

      .grouped > .tag {
        border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
      }

      .grouped:not(.vertical) > .tag:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }

      .grouped:not(.vertical) > .tag:not(:last-child) {
        border-right-width: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      .grouped.vertical > .tag:not(:first-child) {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }

      .grouped.vertical > .tag:not(:last-child) {
        border-bottom-width: 0;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
    /**
    * input
    */
    @layer input {
      @layer base {
        .label {
          line-height: 2;
          cursor: pointer;
        }

        .label.grouped > :first-child {
          margin-left: 0.3em;
        }

        :where(.input, .textarea)::placeholder {
          color: var(--gray-lighter);
        }

        :where(.input, .textarea):invalid::placeholder {
          color: var(--gray);
        }

        .input:not([type]),
.input:where([type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
.select,
.textarea {
          display: inline-flex;
          appearance: none;
          -webkit-appearance: none;
          vertical-align: baseline;
          line-height: 2;
          padding: 0 0.6em;
          color: var(--dark);
          background-color: var(--light);
          border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
          border-radius: calc(var(--radius) / 1.5);
          transition-property: border-color, box-shadow;
        }

        .textarea {
          padding-top: 0.25em;
          padding-bottom: 0.25em;
          line-height: 1.5;
        }

        .select {
          font-family: inherit;
          font-size: inherit;
          cursor: pointer;
          outline: none;
        }

        .select:not([multiple]),
.grouped > .select:not([multiple]) {
          padding-right: 2em;
        }

        .select:not([multiple]) {
          background-repeat: no-repeat;
          background-size: 1em 1em;
          background-position: calc(100% - 0.5em) 0.5em;
          background-image: url("data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2250%22%20height%3D%2250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cg%3E%20%3Crect%20width%3D%2250%22%20height%3D%2250%22%20fill%3D%22none%22%2F%3E%20%3Cpolygon%20fill%3D%22%23b2b2b2%22%20points%3D%2247.25%2C15%2045.164%2C12.914%2025%2C33.078%204.836%2C12.914%202.75%2C15%2025%2C37.25%20%22%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E");
        }

        .select > option {
          padding: 0 1em;
        }

        .select[multiple] {
          padding: 0;
          height: auto;
        }

        .select[multiple] > option {
          padding: 0.5em 0.6em;
        }

        .file-select > [type=file] {
          position: absolute;
          opacity: 0 !important;
          width: 100%;
          height: 100%;
        }

        .radio,
.checkbox {
          cursor: pointer;
        }

        .range {
          appearance: none;
          width: fit-content;
          height: 8px;
          border-radius: 100vmax;
          background-color: var(--blue);
        }

        @-moz-document url-prefix() {
          .range::-moz-range-thumb {
            appearance: none;
            width: 14px;
            height: 14px;
            border: none;
            border-radius: 100vmax;
            box-shadow: 0 0 0 1px var(--gray);
          }
        }
      }
      @layer state {
        .input[readonly]:not([type]),
.input[readonly]:where([type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
:where(.select, .textarea)[readonly] {
          color: var(--gray);
        }

        .input[disabled]:not([type]),
.input[disabled]:where([type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
fieldset[disabled] :where(.input:not([type]),
          [type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
:where(.select, .textarea)[disabled],
fieldset[disabled] :where(.select, .textarea) {
          opacity: var(--disabled-opacity);
          background-color: var(--light);
          color: var(--gray);
          cursor: not-allowed;
        }

        .input:focus:not([type]),
.input:focus:where([type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
:where(.select, .textarea):focus {
          box-shadow: 0 0 2px 1px var(--primary) inset;
        }

        .input:invalid:not([type]),
.input:invalid:where([type=text],
          [type=date],
          [type=datetime-local],
          [type=email],
          [type=file],
          [type=month],
          [type=number],
          [type=password],
          [type=search],
          [type=tel],
          [type=time],
          [type=url],
          [type=week]),
:where(.select, .textarea):invalid {
          background-color: hsl(354, calc(var(--s) * 100%), calc(90% + 7% * var(--bg-l)));
          border-color: var(--danger);
        }
      }
    }
    /**
    * table
    */
    @layer table {
      .table :where(thead, tfoot) {
        background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.08);
      }

      .table :where(td, th) {
        border: 1px solid hsl(var(--h), 10%, calc(var(--bg-l) * 50% + 30%));
        border-width: 0 0 1px;
        padding: 0.25em 0.75em;
      }

      .table thead :where(td, th) {
        border-width: 0 0 2px;
      }

      .table tfoot :where(td, th) {
        border-width: 2px 0 0;
      }

      .table tbody tr:last-child :where(td, th) {
        border-bottom-width: 0;
      }

      .table.bordered :where(td, th) {
        border-width: 1px;
      }

      .table.bordered tr:last-child :where(td, th) {
        border-bottom-width: 1px;
      }

      .table.hoverable :where(tbody tr:hover) {
        background-color: hsl(0, 0%, calc(var(--bg-l-invert) * 100%), 0.08);
      }
    }
    /**
    * dialog
    */
    @layer dialog {
      .dialog {
        position: fixed;
        inset: 0;
        margin: auto;
        width: fit-content;
        height: fit-content;
        max-width: calc(100vw - 2rem);
        max-height: calc(100vh - 2rem);
        color: var(--fg);
        background-color: var(--bg);
        font-size: 1rem;
        padding: 1em;
        border: none;
        border-radius: var(--radius);
        box-shadow: 0 0 1px var(--gray) inset;
        opacity: 0;
        transition: opacity var(--duration);
      }

      .dialog[open] {
        display: inline-block;
        opacity: 1;
      }

      .dialog::backdrop {
        background-color: rgba(0, 0, 0, 0.55);
        backdrop-filter: blur(1px);
      }

      .close {
        display: inline-flex;
        position: relative;
        line-height: 0;
        font-size: 0;
        width: 1.25rem;
        height: 1.25rem;
        padding: 0;
        flex-grow: 0;
        flex-shrink: 0;
        align-items: center;
        align-content: center;
        justify-content: center;
        appearance: none;
        -moz-appearance: none;
        -webkit-appearance: none;
        border: none;
        border-radius: 100vmax;
        cursor: pointer;
        background-color: rgba(128, 128, 128, 0.5);
        transform: rotate(45deg);
        transform-origin: center center;
      }

      .close::before {
        display: block;
        content: "";
        position: absolute;
        width: 2px;
        height: 0.75rem;
        background-color: var(--gray);
      }

      .close::after {
        display: block;
        content: "";
        position: absolute;
        width: 0.75rem;
        height: 2px;
        background-color: var(--gray);
      }

      .dialog > .close {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
      }

      .dialog > .close + * {
        margin-top: 0.75rem;
      }
    }
    /**
    * grouped
    */
    @layer grouped {
      .grouped {
        display: inline-flex;
        align-items: baseline;
      }

      .grouped.vertical {
        flex-direction: column;
        align-items: stretch;
      }

      .grouped > *,
.file-select > * {
        border-radius: var(--radius);
      }

      .file-select:not(.vertical) > [type=file] + :nth-child(2) {
        border-top-left-radius: var(--radius);
        border-bottom-left-radius: var(--radius);
      }

      .file-select.vertical > [type=file] + :nth-child(2) {
        border-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
      }

      .grouped:not(.vertical) > :not(:first-child),
.file-select > :not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }

      .grouped:not(.vertical) > :not(:last-child),
.file-select:not(.vertical) > :not(:last-child) {
        border-right-width: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      .grouped.vertical > :not(:first-child) {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }

      .grouped.vertical > :not(:last-child) {
        border-bottom-width: 0;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }
  @layer modifier {
    :where(.button, .tag).is-white,
:where(.toggle-button, .file-select).is-white > input + * {
      background-color: var(--white);
    }

    :where(.button, .tag).is-light,
:where(.toggle-button, .file-select).is-light > input + * {
      background-color: var(--light);
    }

    :where(.button, .tag).is-gray-lighter,
:where(.toggle-button, .file-select).is-gray-lighter > input + * {
      background-color: var(--gray-lighter);
      color: var(--light);
    }

    :where(.button, .tag).is-gray-light,
:where(.toggle-button, .file-select).is-gray-light > input + * {
      background-color: var(--gray-light);
      color: var(--light);
    }

    :where(.button, .tag).is-gray,
:where(.toggle-button, .file-select).is-gray > input + * {
      background-color: var(--gray);
      color: var(--light);
    }

    :where(.button, .tag).is-gray-dark,
:where(.toggle-button, .file-select).is-gray-dark > input + * {
      background-color: var(--gray-dark);
      color: var(--light);
    }

    :where(.button, .tag).is-dark,
:where(.toggle-button, .file-select).is-dark > input + * {
      background-color: var(--dark);
      color: var(--light);
    }

    :where(.button, .tag).is-black,
:where(.toggle-button, .file-select).is-black > input + * {
      background-color: var(--black);
      color: var(--light);
    }

    :where(.button, .tag).is-primary,
:where(.toggle-button, .file-select).is-primary > input + * {
      background-color: var(--primary);
      color: var(--light);
    }

    :where(.button, .tag).is-secondary,
:where(.toggle-button, .file-select).is-secondary > input + * {
      background-color: var(--secondary);
      color: var(--light);
    }

    :where(.button, .tag).is-success,
:where(.toggle-button, .file-select).is-success > input + * {
      background-color: var(--success);
      color: var(--light);
    }

    :where(.button, .tag).is-info,
:where(.toggle-button, .file-select).is-info > input + * {
      background-color: var(--info);
      color: var(--light);
    }

    :where(.button, .tag).is-warning,
:where(.toggle-button, .file-select).is-warning > input + * {
      background-color: var(--warning);
      color: var(--light);
    }

    :where(.button, .tag).is-danger,
:where(.toggle-button, .file-select).is-danger > input + * {
      background-color: var(--danger);
      color: var(--light);
    }

    :where(.button, .tag).is-blue,
:where(.toggle-button, .file-select).is-blue > input + * {
      background-color: var(--blue);
      color: var(--light);
    }

    :where(.button, .tag).is-indigo,
:where(.toggle-button, .file-select).is-indigo > input + * {
      background-color: var(--indigo);
      color: var(--light);
    }

    :where(.button, .tag).is-purple,
:where(.toggle-button, .file-select).is-purple > input + * {
      background-color: var(--purple);
      color: var(--light);
    }

    :where(.button, .tag).is-pink,
:where(.toggle-button, .file-select).is-pink > input + * {
      background-color: var(--pink);
      color: var(--light);
    }

    :where(.button, .tag).is-red,
:where(.toggle-button, .file-select).is-red > input + * {
      background-color: var(--red);
      color: var(--light);
    }

    :where(.button, .tag).is-orange,
:where(.toggle-button, .file-select).is-orange > input + * {
      background-color: var(--orange);
      color: var(--light);
    }

    :where(.button, .tag).is-yellow,
:where(.toggle-button, .file-select).is-yellow > input + * {
      background-color: var(--yellow);
      color: var(--light);
    }

    :where(.button, .tag).is-green,
:where(.toggle-button, .file-select).is-green > input + * {
      background-color: var(--green);
      color: var(--light);
    }

    :where(.button, .tag).is-teal,
:where(.toggle-button, .file-select).is-teal > input + * {
      background-color: var(--teal);
      color: var(--light);
    }

    :where(.button, .tag).is-cyan,
:where(.toggle-button, .file-select).is-cyan > input + * {
      background-color: var(--cyan);
      color: var(--light);
    }

    :where(.button, .tag).outlined.is-white,
:where(.toggle-button, .file-select).outlined.is-white > input + * {
      background-color: transparent;
      color: var(--white);
      border-color: var(--white);
    }

    :where(.button, .tag).outlined.is-light,
:where(.toggle-button, .file-select).outlined.is-light > input + * {
      background-color: transparent;
      color: var(--light);
      border-color: var(--light);
    }

    :where(.button, .tag).outlined.is-gray-lighter,
:where(.toggle-button, .file-select).outlined.is-gray-lighter > input + * {
      background-color: transparent;
      color: var(--gray-lighter);
      border-color: var(--gray-lighter);
    }

    :where(.button, .tag).outlined.is-gray-light,
:where(.toggle-button, .file-select).outlined.is-gray-light > input + * {
      background-color: transparent;
      color: var(--gray-light);
      border-color: var(--gray-light);
    }

    :where(.button, .tag).outlined.is-gray,
:where(.toggle-button, .file-select).outlined.is-gray > input + * {
      background-color: transparent;
      color: var(--gray);
      border-color: var(--gray);
    }

    :where(.button, .tag).outlined.is-gray-dark,
:where(.toggle-button, .file-select).outlined.is-gray-dark > input + * {
      background-color: transparent;
      color: var(--gray-dark);
      border-color: var(--gray-dark);
    }

    :where(.button, .tag).outlined.is-dark,
:where(.toggle-button, .file-select).outlined.is-dark > input + * {
      background-color: transparent;
      color: var(--dark);
      border-color: var(--dark);
    }

    :where(.button, .tag).outlined.is-black,
:where(.toggle-button, .file-select).outlined.is-black > input + * {
      background-color: transparent;
      color: var(--black);
      border-color: var(--black);
    }

    :where(.button, .tag).outlined.is-primary,
:where(.toggle-button, .file-select).outlined.is-primary > input + * {
      background-color: transparent;
      color: var(--primary);
      border-color: var(--primary);
    }

    :where(.button, .tag).outlined.is-secondary,
:where(.toggle-button, .file-select).outlined.is-secondary > input + * {
      background-color: transparent;
      color: var(--secondary);
      border-color: var(--secondary);
    }

    :where(.button, .tag).outlined.is-success,
:where(.toggle-button, .file-select).outlined.is-success > input + * {
      background-color: transparent;
      color: var(--success);
      border-color: var(--success);
    }

    :where(.button, .tag).outlined.is-info,
:where(.toggle-button, .file-select).outlined.is-info > input + * {
      background-color: transparent;
      color: var(--info);
      border-color: var(--info);
    }

    :where(.button, .tag).outlined.is-warning,
:where(.toggle-button, .file-select).outlined.is-warning > input + * {
      background-color: transparent;
      color: var(--warning);
      border-color: var(--warning);
    }

    :where(.button, .tag).outlined.is-danger,
:where(.toggle-button, .file-select).outlined.is-danger > input + * {
      background-color: transparent;
      color: var(--danger);
      border-color: var(--danger);
    }

    :where(.button, .tag).outlined.is-blue,
:where(.toggle-button, .file-select).outlined.is-blue > input + * {
      background-color: transparent;
      color: var(--blue);
      border-color: var(--blue);
    }

    :where(.button, .tag).outlined.is-indigo,
:where(.toggle-button, .file-select).outlined.is-indigo > input + * {
      background-color: transparent;
      color: var(--indigo);
      border-color: var(--indigo);
    }

    :where(.button, .tag).outlined.is-purple,
:where(.toggle-button, .file-select).outlined.is-purple > input + * {
      background-color: transparent;
      color: var(--purple);
      border-color: var(--purple);
    }

    :where(.button, .tag).outlined.is-pink,
:where(.toggle-button, .file-select).outlined.is-pink > input + * {
      background-color: transparent;
      color: var(--pink);
      border-color: var(--pink);
    }

    :where(.button, .tag).outlined.is-red,
:where(.toggle-button, .file-select).outlined.is-red > input + * {
      background-color: transparent;
      color: var(--red);
      border-color: var(--red);
    }

    :where(.button, .tag).outlined.is-orange,
:where(.toggle-button, .file-select).outlined.is-orange > input + * {
      background-color: transparent;
      color: var(--orange);
      border-color: var(--orange);
    }

    :where(.button, .tag).outlined.is-yellow,
:where(.toggle-button, .file-select).outlined.is-yellow > input + * {
      background-color: transparent;
      color: var(--yellow);
      border-color: var(--yellow);
    }

    :where(.button, .tag).outlined.is-green,
:where(.toggle-button, .file-select).outlined.is-green > input + * {
      background-color: transparent;
      color: var(--green);
      border-color: var(--green);
    }

    :where(.button, .tag).outlined.is-teal,
:where(.toggle-button, .file-select).outlined.is-teal > input + * {
      background-color: transparent;
      color: var(--teal);
      border-color: var(--teal);
    }

    :where(.button, .tag).outlined.is-cyan,
:where(.toggle-button, .file-select).outlined.is-cyan > input + * {
      background-color: transparent;
      color: var(--cyan);
      border-color: var(--cyan);
    }

    .fullwidth {
      width: 100%;
    }

    .fullwidth:not(.table) {
      display: flex;
    }

    .fullwidth:not(.table):not([multiple]) > * {
      width: 100%;
    }

    :not(.vertical) .fullwidth:not(:where(.table, [multiple], .vertical)) > :not(.vertical) {
      margin-left: 0.5em;
    }

    .middles,
.middles * {
      vertical-align: middle;
    }

    .size-8 {
      font-size: 0.2rem;
    }

    .size-7 {
      font-size: 0.3rem;
    }

    .size-6 {
      font-size: 0.4rem;
    }

    .size-5 {
      font-size: 0.5rem;
    }

    .size-4 {
      font-size: 0.6rem;
    }

    .size-xs,
.size-3 {
      font-size: 0.7rem;
    }

    .size-2 {
      font-size: 0.8rem;
    }

    .size-s,
.size-1 {
      font-size: 0.9rem;
    }

    .size-m,
.size-0,
.size\+0 {
      font-size: 1rem;
    }

    .size\+1 {
      font-size: 1.1rem;
    }

    .size\+2 {
      font-size: 1.2rem;
    }

    .size-l,
.size\+3 {
      font-size: 1.3rem;
    }

    .size-xl,
.size\+4 {
      font-size: 1.5rem;
    }

    .size\+5 {
      font-size: 1.75rem;
    }

    .size\+6 {
      font-size: 2rem;
    }

    .size\+7 {
      font-size: 2.5rem;
    }

    .size\+8 {
      font-size: 3.5rem;
    }

    .tag.size-8,
.grouped.size-8 > .tag {
      font-size: 0.15rem;
    }

    .tag.size-7,
.grouped.size-7 > .tag {
      font-size: 0.2rem;
    }

    .tag.size-6,
.grouped.size-6 > .tag {
      font-size: 0.25rem;
    }

    .tag.size-5,
.grouped.size-5 > .tag {
      font-size: 0.3rem;
    }

    .tag.size-4,
.grouped.size-4 > .tag {
      font-size: 0.35rem;
    }

    .tag.size-xs,
.tag.size-3,
.grouped.size-xs > .tag,
.grouped.size-3 > .tag {
      font-size: 0.4rem;
    }

    .tag.size-2,
.grouped.size-2 > .tag {
      font-size: 0.45rem;
    }

    .tag.size-s,
.tag.size-1,
.grouped.size-s > .tag,
.grouped.size-1 > .tag {
      font-size: 0.5rem;
    }

    .tag.size-m,
.tag.size-0,
.tag.size\+0,
.grouped.size-m > .tag,
.grouped.size-0 > .tag,
.grouped.size\+0 > .tag {
      font-size: 0.6rem;
    }

    .tag.size\+1,
.grouped.size\+1 > .tag {
      font-size: 0.7rem;
    }

    .tag.size\+2,
.grouped.size\+2 > .tag {
      font-size: 0.8rem;
    }

    .tag.size-l,
.tag.size\+3,
.grouped.size-l > .tag,
.grouped.size\+3 > .tag {
      font-size: 1rem;
    }

    .tag.size-xl,
.tag.size\+4,
.grouped.size-xl > .tag .grouped.size\+4 > .tag {
      font-size: 1.2rem;
    }

    .tag.size\+5,
.grouped.size\+5 > .tag {
      font-size: 1.3rem;
    }

    .tag.size\+6,
.grouped.size\+6 > .tag {
      font-size: 1.4rem;
    }

    .tag.size\+7,
.grouped.size\+7 > .tag {
      font-size: 1.6rem;
    }

    .tag.size\+8,
.grouped.size\+8 > .tag {
      font-size: 1.8rem;
    }

    .grouped:not(.vertical) > :not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    .grouped:not(.vertical) > :not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .grouped.vertical > :not(:first-child) {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    .grouped.vertical > :not(:last-child) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    .bg-white {
      background-color: var(--white);
    }

    .fg-white {
      color: var(--white);
    }

    .bg-light {
      background-color: var(--light);
    }

    .fg-light {
      color: var(--light);
    }

    .bg-gray-lighter {
      background-color: var(--gray-lighter);
    }

    .fg-gray-lighter {
      color: var(--gray-lighter);
    }

    .bg-gray-light {
      background-color: var(--gray-light);
    }

    .fg-gray-light {
      color: var(--gray-light);
    }

    .bg-gray {
      background-color: var(--gray);
    }

    .fg-gray {
      color: var(--gray);
    }

    .bg-gray-dark {
      background-color: var(--gray-dark);
    }

    .fg-gray-dark {
      color: var(--gray-dark);
    }

    .bg-dark {
      background-color: var(--dark);
    }

    .fg-dark {
      color: var(--dark);
    }

    .bg-black {
      background-color: var(--black);
    }

    .fg-black {
      color: var(--black);
    }

    .bg-primary {
      background-color: var(--primary);
    }

    .fg-primary {
      color: var(--primary);
    }

    .bg-secondary {
      background-color: var(--secondary);
    }

    .fg-secondary {
      color: var(--secondary);
    }

    .bg-success {
      background-color: var(--success);
    }

    .fg-success {
      color: var(--success);
    }

    .bg-info {
      background-color: var(--info);
    }

    .fg-info {
      color: var(--info);
    }

    .bg-warning {
      background-color: var(--warning);
    }

    .fg-warning {
      color: var(--warning);
    }

    .bg-danger {
      background-color: var(--danger);
    }

    .fg-danger {
      color: var(--danger);
    }

    .bg-blue {
      background-color: var(--blue);
    }

    .fg-blue {
      color: var(--blue);
    }

    .bg-indigo {
      background-color: var(--indigo);
    }

    .fg-indigo {
      color: var(--indigo);
    }

    .bg-purple {
      background-color: var(--purple);
    }

    .fg-purple {
      color: var(--purple);
    }

    .bg-pink {
      background-color: var(--pink);
    }

    .fg-pink {
      color: var(--pink);
    }

    .bg-red {
      background-color: var(--red);
    }

    .fg-red {
      color: var(--red);
    }

    .bg-orange {
      background-color: var(--orange);
    }

    .fg-orange {
      color: var(--orange);
    }

    .bg-yellow {
      background-color: var(--yellow);
    }

    .fg-yellow {
      color: var(--yellow);
    }

    .bg-green {
      background-color: var(--green);
    }

    .fg-green {
      color: var(--green);
    }

    .bg-teal {
      background-color: var(--teal);
    }

    .fg-teal {
      color: var(--teal);
    }

    .bg-cyan {
      background-color: var(--cyan);
    }

    .fg-cyan {
      color: var(--cyan);
    }
  }
}

/*# sourceMappingURL=slender.css.map */
